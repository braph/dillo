/** \page dw-out-of-flow Handling Elements Out Of Flow

<div style="border: 2px solid #ff4040; margin-bottom: 0.5em;
padding: 0.5em 1em; background-color: #fff0f0"><b>Info:</b>
Incomplete; some parts have been removed, beause they are not up to
date.</div>

<div style="border: 2px solid #ffff00; margin-bottom: 0.5em;
padding: 0.5em 1em; background-color: #ffffe0"><b>Info:</b>
Should be incorporated into dw::Textblock.</div>

This texts deals with both floats and absolute positions, which have
in common, that there is a distinction between generating block and
containing block (we are here using the same notation as in the
CSS&nbsp;2 specification). Consider this snippet (regarding floats):


    <ul>
      <li>Some text.</li>
      <li>
        <div style="float:right; width=50%">Some longer text, so
          that the effect described in this passage can be
          demonstrated.
        </div>
        Some more and longer text.</li>
      <li>Final text. Plus some more to demonstrate how text flows
        around the float on the right side.</li>
    </ul>

which may be rendered like this

\image html dw-floats-01.png

The float (the DIV section, yellow in the image) is defined
("generated") within the list item (blue), so, in CSS 2 terms, the
list item is the generating block of the float. However, as the image
shows, the float is not contained by the list item, but another block,
several levels above (not shown here). In terms of ::dw, this means
that the dw::Textblock representing the float cannot be a child of the
dw::Textblock representing the generating block, the list item, since
the allocation of a child widget must be within the allocation of the
parent widget. Instead, to each dw::Textblock, another dw::Textblock
is assigned as the containing box.

(Notice also that other text blocks must regard floats to calculate
their borders, and so their size. In this example, the following list
item (green) must consider the position of the float. This is
discussed in detail in the next section.)


Implication for size calculations and allocation
================================================

...

Implementation overview
=======================

Widget level
------------

The terms _generating block_ and _containing block_ have been raised
to a higher level, the one of dw::core::Widget, and are here called
_generating widget_ and _containing widget_. To represent the
distinction, the type of dw::core::Content has been split into three
parts:

- If a widget is out of flow, the generating widget keeps a reference
  with the type dw::core::Content::WIDGET_OOF_REF, while the
  containing block refers to it as dw::core::Content::WIDGET_OOF_CONT.

- For widgets within flow, dw::core::Content::WIDGET_IN_FLOW is used.

Notice that in the first case, there are two pieces of content
referring to the same widget.

An application of this distinction is iterators. TODO: more. And still
missing: DeepIterator may need the generating parent widget in some
cases.


Textblock level
---------------
Both dw::Textblock::notifySetAsTopLevel and
dw::Textblock::notifySetParent set the member
dw::Textblock::containingBlock appropriately, (according to rules
which should be defined in this document).

Handling widgets out of flow is partly the task of the new class
dw::OutOfFlowMgr, which is stored by dw::Textblock::outOfFlowMgr, but
only for containing blocks. Generating blocks should refer to
_containingBlock->outOfFlowMgr_. (Perhaps dw::OutOfFlowMgr may become
independent of dw::Textblock.)

dw::Textblock::addWidget is extended, so that floats and absolutely
positioned elements can be added. Notice that not this widget, but the
containing block becomes the parent of the newly added child, if it is
out of flow. dw::Textblock::addWidget decides this by calling
dw::OutOfFlowMgr::isOutOfFlow. (See new content types above.)

dw::core::Widget::parentRef has become a new representation. Before,
it represented the line numer. Now (least signifant bit left):

    +---+---+- - - - - - - - - - -+---+
    |         line number         | 0 |
    +---+---+- - - - - - - - - - -+---+

    +---+---+- - - - - - - - -+---+---+
    |  number of left float   | 0 | 1 |
    +---+---+- - - - - - - - -+---+---+

    +---+---+- - - - - - - - -+---+---+
    |  number of right float  | 1 | 1 |
    +---+---+- - - - - - - - -+---+---+

The latter two must be changed, as soom as absolute positions are
introduced. Details are hidden by static inline methods of
dw::OutOfFlowMgr.


*/